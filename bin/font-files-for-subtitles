#!/usr/local/bin/perl6

use SubtitleParser;

sub MAIN(Str $subtitle-file where *.IO.f, Str $font-path where *.IO.d) {
    my $fh = try { $subtitle-file.IO.open };
    unless $fh {
        note $!;
        exit 1;
    }
    LEAVE $fh.close;

    my $subs = SubtitleParser.parse_ssa($fh.slurp);
    unless $subs {
        note "Couldn't parse subtitles";
        exit 1;
    }

    for $subs.styles -> $s {
        my $filename = get-filename-for-font($s.get('Fontname'), $font-path);
        say $filename;
    }
}

sub get-filename-for-font(Str $font-name, Str $font-path --> Str) {
    state %filename-for-font = populate-filename-for-font($font-path);
    state @all-font-names = %filename-for-font.keys;

    %filename-for-font{$font-name}:exists and return %filename-for-font{$font-name};

    # Maybe there's a similarly named font...
    my @matching = @all-font-names.grep: { .match(/^ "$font-name" <|w>/) }
    if @matching.elems == 0 {
        fail "No font found for $font-name";
    } elsif @matching.elems > 1 {
        fail "Multiple fonts found for $font-name: " ~ @matching.join(', ');
    } else {
        return %filename-for-font{ @matching[0] };
    }
}

sub populate-filename-for-font(Str $font-path) {
    my %filename-for-font;
    for $font-path.IO.dir -> $filename {
        for font-names-for-filename($filename) -> $fontname {
            %filename-for-font{$fontname} = $filename.Str;
        }
    }
    return %filename-for-font;
}

sub font-names-for-filename(Cool $font-filename --> List) {
    my $fc-scan = run 'fc-scan', '--format', "%\{postscriptname\}\n", $font-filename, :out;
    my Str @fontnames = $fc-scan.out.slurp(:close).lines;
    return @fontnames.List;
}

